(define delete-second1(lambda (LS) (cons (car LS) (cdr (cdr LS)))))
(define delete-second2 (lambda (LS) (if (and (not (null? LS))(not (null? (cdr LS)))) (delete-second1 LS) LS)))
(define switch-one-and-two (lambda (LS) (if (and (not (null? LS))(not (null? (cdr LS)))) (cons (car (cdr LS)) (cons (car LS) (cdr (cdr LS)))) LS)))