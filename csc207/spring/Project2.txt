Part 1:

Base Case: 
SumOdd(N) = 1 If N > 0

Non-Recursive Case: 
SumOdd(N) = 1 + 3 + ... + ((2 * N) - 1) + N

Recursive Case:
SumOdd(N)     = 1 + 3 + ... + ((2 * N) - 1) + N
SumOdd(N - 1) = 1 + 3 + ... + ((2 * N) - 1)

Base Case: 
sumlist(LS) = 0 if '()

Non-Recursive Case: 
sumlist(LS)     = add cdr LS to each other until

Recursive Case:
sumlist(LS)     = 1 + 3 + ... + ((2 * N) - 1) + N
sumlist(LS - 1) = 1 + 3 + ... + ((2 * N) - 1)

Base Case:
getNth(N LS) = If N = 1 return car LS

Non-Recursive Case:
getNth(N LS) = Take the cdr of the list until N is equal to 1 then return (car LS)

Recursive Case:
getNth(N LS) = Take the cdr of the list until N is equal to 1 then return (car LS)
getNth((N -1) LS) = (getNth (- N 1) (cdr LS))








